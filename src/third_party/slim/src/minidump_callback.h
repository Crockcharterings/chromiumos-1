/* SLiM - Simple Login Manager
   Copyright (C) 1997, 1998 Per Liden
   Copyright (C) 2004-06 Simone Rota <sip@varlock.com>
   Copyright (C) 2004-06 Johannes Winkelmann <jw@tks6.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.
*/

#ifndef _MINIDUMP_CALLBACK_H_
#define _MINIDUMP_CALLBACK_H_

#include <string>

extern const char kMinidumpDir[];

bool GetMTime(const std::string& filename, time_t *mtime_out);

/* Called by breakpad before it generates a crash dump.
 * We want to send, at most, one minidump every 12 hours, which is enforced
 * by this callback.
 */
bool FilterCallback(void *context);

/* When a minidump is generated by breakpad, it will call this function.
 * The dump will be located at |dump_path|/|minidump_id|.dmp.
 * Returning true indicates to breakpad that the dump is totally handled,
 * suppressing the calling of other handlers registered after this one, and
 * also suppressing any system-wide crash handling from getting called.
 * Returning false just hands off to the next handler in the chain.
 *
 */
bool MinidumpCallback(const char *dump_path,
                      const char *minidump_id,
                      void *context,
                      bool succeeded);

#endif  // _MINIDUMP_CALLBACK_H_
