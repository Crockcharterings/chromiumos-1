#!/usr/bin/python

import sys
import dbus

def ParseDebugMask(keys):
	mapping = {
		"agent"		: 0x00000001,
		"connection"	: 0x00000002,
		"device"	: 0x00000004,
		"element"	: 0x00000008,
		"inet"		: 0x00000010,
		"manager"	: 0x00000020,
		"network"	: 0x00000040,
		"notifier"	: 0x00000080,
		"profile"	: 0x00000100,
		"resolv"	: 0x00000200,
		"rfkill"	: 0x00000400,
		"rtnl"		: 0x00000800,
		"security"	: 0x00001000,
		"service"	: 0x00002000,
		"storage"	: 0x00004000,
		"task"		: 0x00008000,
		"test"		: 0x00010000,
		"udev"		: 0x00020000,

		"plugin"	: 0x00100000,
		"bluetooth"	: 0x00200000,
		"dhclient"	: 0x00400000,
		"dnsproxy"	: 0x00800000,
		"ethernet"	: 0x01000000,
		"iwmx"		: 0x02000000,
		"pppd"		: 0x04000000,
		"udhcp"		: 0x08000000,
		"wifi"		: 0x10000000,

		"any"		: 0xffffffff,
		"all"		: 0xffffffff
	}
	li = keys.split('+')
	mask = 0
	for key in li:
		mask |= mapping.get(key, 0)
	return mask

bus = dbus.SystemBus()

manager = dbus.Interface(bus.get_object("org.moblin.connman", "/"),
					"org.moblin.connman.Manager")

if (len(sys.argv) < 2):
	print "Debug mask is %s" % (manager.GetDebugMask())
else:
	manager.SetDebugMask(str(ParseDebugMask(sys.argv[1])))
