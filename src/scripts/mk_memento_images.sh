#!/bin/bash

# Copyright (c) 2009 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# This script takes a path to a rootfs.ext2 which was generated by
# build_image.sh and generates an image that can be used for auto
# update.

set -e

if [ -z "$1" ]
then
  echo "usage: $0 path/to/rootfs.image"
  exit 1
fi

if [ $(whoami) = "root" ]
then
  echo "running $0 as root which is unneccessary"
fi

FINAL_OUT_FILE=$(dirname "$1")/update.gz
UNCOMPRESSED_OUT_FILE="$FINAL_OUT_FILE.uncompressed"

ORIGINAL_LABEL=$(/sbin/e2label "$1")

# copy original over to the new file
cp "$1" "$UNCOMPRESSED_OUT_FILE"

# Fix up the file system label. We prefix with 'A'
NEW_LABEL="A${ORIGINAL_LABEL}"
/sbin/tune2fs -L "$NEW_LABEL" "$UNCOMPRESSED_OUT_FILE"

# compress and hash
CS_AND_RET_CODES=$(gzip -c "$UNCOMPRESSED_OUT_FILE" | \
                   tee "$FINAL_OUT_FILE" | openssl sha1 -binary | \
                   openssl base64 | tr '\n' ' '; \
                   echo ${PIPESTATUS[*]})
EXPECTED_RET_CODES="0 0 0 0 0"
set -- $CS_AND_RET_CODES
CALC_CS="$1"
shift
RET_CODES="$@"
if [ "$RET_CODES" != "$EXPECTED_RET_CODES" ]
then
  echo compression/hash failed. $RET_CODES
  exit 1
fi

rm "$UNCOMPRESSED_OUT_FILE"

echo Success. hash is "$CALC_CS"
